/**
 * Author:
 *   Marco van Eerden
 *
 * Description:
 *   Contains all registers and their memory sections. Also contains atomic register aliases for
 *   XOR, SET and CLEAR. Only RP2040-specific peripherals have these aliases, so Cortex-M0+ peripherals such as SIO and PPB do not have them.
 *   The definitions need to be volatile, otherwise the compiler will optimise away crucial steps, such as setting a value to 0.
 */
#pragma once

#include "CMSIS/rp2040_cmsis.h"

static constexpr uintptr_t REGISTER_ATOMIC_XOR_OFFSET = 0x1000ul;
static constexpr uintptr_t REGISTER_ATOMIC_SET_OFFSET = 0x2000ul;
static constexpr uintptr_t REGISTER_ATOMIC_CLEAR_OFFSET = 0x3000ul;

#define XIP_CTRL_XOR ((XIP_CTRL_Type*)(XIP_CTRL_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define XIP_CTRL_SET ((XIP_CTRL_Type*)(XIP_CTRL_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define XIP_CTRL_CLEAR ((XIP_CTRL_Type*)(XIP_CTRL_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define XIP_SSI_XOR ((XIP_SSI_Type*)(XIP_SSI_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define XIP_SSI_SET ((XIP_SSI_Type*)(XIP_SSI_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define XIP_SSI_CLEAR ((XIP_SSI_Type*)(XIP_SSI_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define SYSINFO_XOR ((SYSINFO_Type*)(SYSINFO_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define SYSINFO_SET ((SYSINFO_Type*)(SYSINFO_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define SYSINFO_CLEAR ((SYSINFO_Type*)(SYSINFO_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define SYSCFG_XOR ((SYSCFG_Type*)(SYSCFG_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define SYSCFG_SET ((SYSCFG_Type*)(SYSCFG_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define SYSCFG_CLEAR ((SYSCFG_Type*)(SYSCFG_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define CLOCKS_XOR ((CLOCKS_Type*)(CLOCKS_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define CLOCKS_SET ((CLOCKS_Type*)(CLOCKS_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define CLOCKS_CLEAR ((CLOCKS_Type*)(CLOCKS_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define RESETS_XOR ((RESETS_Type*)(RESETS_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define RESETS_SET ((RESETS_Type*)(RESETS_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define RESETS_CLEAR ((RESETS_Type*)(RESETS_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define PSM_XOR ((PSM_Type*)(PSM_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define PSM_SET ((PSM_Type*)(PSM_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define PSM_CLEAR ((PSM_Type*)(PSM_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define IO_BANK0_XOR ((IO_BANK0_Type*)(IO_BANK0_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define IO_BANK0_SET ((IO_BANK0_Type*)(IO_BANK0_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define IO_BANK0_CLEAR ((IO_BANK0_Type*)(IO_BANK0_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define IO_QSPI_XOR ((IO_QSPI_Type*)(IO_QSPI_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define IO_QSPI_SET ((IO_QSPI_Type*)(IO_QSPI_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define IO_QSPI_CLEAR ((IO_QSPI_Type*)(IO_QSPI_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define PADS_BANK0_XOR ((PADS_BANK0_Type*)(PADS_BANK0_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define PADS_BANK0_SET ((PADS_BANK0_Type*)(PADS_BANK0_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define PADS_BANK0_CLEAR ((PADS_BANK0_Type*)(PADS_BANK0_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define PADS_QSPI_XOR ((PADS_QSPI_Type*)(PADS_QSPI_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define PADS_QSPI_SET ((PADS_QSPI_Type*)(PADS_QSPI_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define PADS_QSPI_CLEAR ((PADS_QSPI_Type*)(PADS_QSPI_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define XOSC_XOR ((XOSC_Type*)(XOSC_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define XOSC_SET ((XOSC_Type*)(XOSC_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define XOSC_CLEAR ((XOSC_Type*)(XOSC_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define PLL_SYS_XOR ((PLL_SYS_Type*)(PLL_SYS_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define PLL_SYS_SET ((PLL_SYS_Type*)(PLL_SYS_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define PLL_SYS_CLEAR ((PLL_SYS_Type*)(PLL_SYS_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define PLL_USB_XOR ((PLL_SYS_Type*)(PLL_USB_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define PLL_USB_SET ((PLL_SYS_Type*)(PLL_USB_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define PLL_USB_CLEAR ((PLL_SYS_Type*)(PLL_USB_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define BUSCTRL_XOR ((BUSCTRL_Type*)(BUSCTRL_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define BUSCTRL_SET ((BUSCTRL_Type*)(BUSCTRL_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define BUSCTRL_CLEAR ((BUSCTRL_Type*)(BUSCTRL_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define UART0_XOR ((UART0_Type*)(UART0_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define UART0_SET ((UART0_Type*)(UART0_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define UART0_CLEAR ((UART0_Type*)(UART0_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define UART1_XOR ((UART0_Type*)(UART1_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define UART1_SET ((UART0_Type*)(UART1_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define UART1_CLEAR ((UART0_Type*)(UART1_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define SPI0_XOR ((SPI0_Type*)(SPI0_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define SPI0_SET ((SPI0_Type*)(SPI0_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define SPI0_CLEAR ((SPI0_Type*)(SPI0_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define SPI1_XOR ((SPI0_Type*)(SPI1_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define SPI1_SET ((SPI0_Type*)(SPI1_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define SPI1_CLEAR ((SPI0_Type*)(SPI1_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define I2C0_XOR ((I2C0_Type*)(I2C0_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define I2C0_SET ((I2C0_Type*)(I2C0_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define I2C0_CLEAR ((I2C0_Type*)(I2C0_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define I2C1_XOR ((I2C0_Type*)(I2C1_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define I2C1_SET ((I2C0_Type*)(I2C1_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define I2C1_CLEAR ((I2C0_Type*)(I2C1_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define ADC_XOR ((ADC_Type*)(ADC_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define ADC_SET ((ADC_Type*)(ADC_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define ADC_CLEAR ((ADC_Type*)(ADC_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define PWM_XOR ((PWM_Type*)(PWM_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define PWM_SET ((PWM_Type*)(PWM_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define PWM_CLEAR ((PWM_Type*)(PWM_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define TIMER_XOR ((TIMER_Type*)(TIMER_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define TIMER_SET ((TIMER_Type*)(TIMER_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define TIMER_CLEAR ((TIMER_Type*)(TIMER_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define WATCHDOG_XOR ((WATCHDOG_Type*)(WATCHDOG_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define WATCHDOG_SET ((WATCHDOG_Type*)(WATCHDOG_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define WATCHDOG_CLEAR ((WATCHDOG_Type*)(WATCHDOG_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define RTC_XOR ((RTC_Type*)(RTC_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define RTC_SET ((RTC_Type*)(RTC_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define RTC_CLEAR ((RTC_Type*)(RTC_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define ROSC_XOR ((ROSC_Type*)(ROSC_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define ROSC_SET ((ROSC_Type*)(ROSC_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define ROSC_CLEAR ((ROSC_Type*)(ROSC_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define VREG_AND_CHIP_RESET_XOR ((VREG_AND_CHIP_RESET_Type*)(VREG_AND_CHIP_RESET_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define VREG_AND_CHIP_RESET_SET ((VREG_AND_CHIP_RESET_Type*)(VREG_AND_CHIP_RESET_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define VREG_AND_CHIP_RESET_CLEAR ((VREG_AND_CHIP_RESET_Type*)(VREG_AND_CHIP_RESET_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define TBMAN_XOR ((TBMAN_Type*)(TBMAN_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define TBMAN_SET ((TBMAN_Type*)(TBMAN_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define TBMAN_CLEAR ((TBMAN_Type*)(TBMAN_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define DMA_XOR ((DMA_Type*)(DMA_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define DMA_SET ((DMA_Type*)(DMA_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define DMA_CLEAR ((DMA_Type*)(DMA_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define USBCTRL_DPRAM_XOR ((USBCTRL_DPRAM_Type*)(USBCTRL_DPRAM_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define USBCTRL_DPRAM_SET ((USBCTRL_DPRAM_Type*)(USBCTRL_DPRAM_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define USBCTRL_DPRAM_CLEAR ((USBCTRL_DPRAM_Type*)(USBCTRL_DPRAM_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define USBCTRL_REGS_XOR ((USBCTRL_REGS_Type*)(USBCTRL_REGS_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define USBCTRL_REGS_SET ((USBCTRL_REGS_Type*)(USBCTRL_REGS_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define USBCTRL_REGS_CLEAR ((USBCTRL_REGS_Type*)(USBCTRL_REGS_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define PIO0_XOR ((PIO0_Type*)(PIO0_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define PIO0_SET ((PIO0_Type*)(PIO0_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define PIO0_CLEAR ((PIO0_Type*)(PIO0_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))

#define PIO1_XOR ((PIO0_Type*)(PIO1_BASE + REGISTER_ATOMIC_XOR_OFFSET))
#define PIO1_SET ((PIO0_Type*)(PIO1_BASE + REGISTER_ATOMIC_SET_OFFSET))
#define PIO1_CLEAR ((PIO0_Type*)(PIO1_BASE + REGISTER_ATOMIC_CLEAR_OFFSET))
